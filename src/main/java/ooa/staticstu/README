static关键字的学习：
拥有自己的成员，互相独立。然而在某些时候，我们更希望该类所有的对象共享同一个成员。此时就是 static 大显身手的时候了！！

1.Java中被static修饰的成员称为静态成员或类成员。
它属于整个类所有，而不是某个对象所有，即被类的所有对象所共享。
静态成员可以使用类名直接访问，也可以使用对象名进行访问。当然，鉴于他作用的特殊性更推荐用类名访问~~
使用 static可以修饰变量、方法和代码块。
要注意哦：静态成员属于整个类，当系统第一次使用该类时，就会为其分配内存空间直到该类被卸载才会进行资源回收！~~

2..Java中的static使用之静态方法：
    与静态变量一样，我们也可以使用static修饰方法，称为静态方法或类方法。其实之前我们一直写的 main 方法就是静态方法。静态方法的使用如：
        public class HelloWorld {

            // 使用static关键字定义静态方法
            public static void print(){
                System.out.println("hello world!");
            }

            public static void main(String[] args) {
                // 直接通过类名调用
                HelloWorld.print();

                // 也可以通过对象名调用，推荐直接使用类名调用
                HelloWorld helloWorld = new HelloWorld();
                helloWorld.print();
            }
        }
    需要注意：
        1、 静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员。如果希望在静态方法中调用非静态变量，可以通过创建类的对象，然后通过对象来访问非静态变量。
        2、 在普通成员方法中，则可以直接访问同类的非静态变量和静态变量
        3、 静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。
        （见代码StaticDetail.java）
3.Java中的static使用之静态初始化块
    java中可以通过初始化块进行数据赋值，在类的声明中，可以包含多个初始化块，当创建类的实例时，就会依次执行这些代码块。
    如果使用 static 修饰初始化块，就称为静态初始化块。
    需要特别注意：静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量。
    （见代码StaticBlock.java）
